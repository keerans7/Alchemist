k=1
m=2
resultpc<- matrix(0,nrow=2*ncomp,ncol=2)
resultconf<-matrix(0,nrow=2*ncomp,ncol=2)
brandname<-matrix(0,nrow=2*ncomp,ncol=1)
loop1=nrow-nrep
while (i<=loop1){
ni<-i+nrep_1
brandi <- brand[i:ni,]
datai <- factor[i:ni,]
j<-i+nrep
while (j<=nrow) {
nj<-j+nrep_1
brandj<-brand[j:nj,]
dataj <- factor[j:nj,]
brandij<-rbind(brandi,brandj)
dataij<-rbind(datai,dataj)
testij<-dataij[, colSums(dataij,na.rm = TRUE)!=0]
test<-cbind(brandij$brand,testij)
write.csv(test,file="~/Desktop/test.csv")
testnew <- read.csv(file="~/Desktop/test.csv",head=TRUE,sep=",")
nn<- ncol(testnew)
test_pls = plsDA(testnew[,3:nn], testnew$brandij.brand, autosel=TRUE, comps=2, validation=NULL, test=NULL, cv="LOO", k=NULL, retain.models=FALSE)
summary(test_pls)
pc<-test_pls$comp_group
score<-test_pls$scores
yload<-test_pls$y.loadings
comp<-test_pls$components
name1<- arrayInd(1, dim(pc))
name2<- arrayInd(2, dim(pc))
resultpc[k,1]<-pc[1,1]
resultpc[k,2]<-pc[1,2]
brandname[k,1]<-rownames(pc)[name1[,1]]
resultpc[m,1]<-pc[2,1]
resultpc[m,2]<-pc[2,2]
brandname[m,1]<-rownames(pc)[name2[,1]]
conf<-test_pls$confusion
resultconf[k,1]<-conf[1,1]
resultconf[k,2]<-conf[1,2]
resultconf[m,1]<-conf[2,1]
resultconf[m,2]<-conf[2,2]
j=j+nrep
k=k+2
m=m+2
}
i=i+nrep
}
write.csv(resultpc,file="~/Desktop/resultpc.csv")
write.csv(brandname,file="~/Desktop/brandname.csv")
write.csv(resultconf,file="~/Desktop/resultconf.csv")
library(DiscriMiner)
library(gdata)
test1 <- read.csv(file="~/Desktop/test10.csv",head=TRUE,sep=",")
ncol <- ncol(test1)
nrow <- nrow(test1)
nrep=3 #change the number of replicates
nrep_1=2 #change the number of replicates-1
ndata<- nrow/nrep
ncomp<-ndata*(ndata-1)/2
brand<- test1[,1:2]
factor<-test1[,2:ncol]
i=1
k=1
m=2
resultpc<- matrix(0,nrow=2*ncomp,ncol=2)
resultconf<-matrix(0,nrow=2*ncomp,ncol=2)
brandname<-matrix(0,nrow=2*ncomp,ncol=1)
loop1=nrow-nrep
while (i<=loop1){
ni<-i+nrep_1
brandi <- brand[i:ni,]
datai <- factor[i:ni,]
j<-i+nrep
while (j<=nrow) {
nj<-j+nrep_1
brandj<-brand[j:nj,]
dataj <- factor[j:nj,]
brandij<-rbind(brandi,brandj)
dataij<-rbind(datai,dataj)
testij<-dataij[, colSums(dataij,na.rm = TRUE)!=0]
test<-cbind(brandij$brand,testij)
write.csv(test,file="~/Desktop/test.csv")
testnew <- read.csv(file="~/Desktop/test.csv",head=TRUE,sep=",")
nn<- ncol(testnew)
test_pls = plsDA(testnew[,3:nn], testnew$brandij.brand, autosel=TRUE, comps=2, validation=NULL, test=NULL, cv="LOO", k=NULL, retain.models=FALSE)
summary(test_pls)
pc<-test_pls$comp_group
score<-test_pls$scores
yload<-test_pls$y.loadings
comp<-test_pls$components
name1<- arrayInd(1, dim(pc))
name2<- arrayInd(2, dim(pc))
resultpc[k,1]<-pc[1,1]
resultpc[k,2]<-pc[1,2]
brandname[k,1]<-rownames(pc)[name1[,1]]
resultpc[m,1]<-pc[2,1]
resultpc[m,2]<-pc[2,2]
brandname[m,1]<-rownames(pc)[name2[,1]]
conf<-test_pls$confusion
resultconf[k,1]<-conf[1,1]
resultconf[k,2]<-conf[1,2]
resultconf[m,1]<-conf[2,1]
resultconf[m,2]<-conf[2,2]
j=j+nrep
k=k+2
m=m+2
}
i=i+nrep
}
library(DiscriMiner)
library(gdata)
test1 <- read.csv(file="~/Desktop/test10.csv",head=TRUE,sep=",")
ncol <- ncol(test1)
nrow <- nrow(test1)
nrep=3 #change the number of replicates
nrep_1=2 #change the number of replicates-1
ndata<- nrow/nrep
ncomp<-ndata*(ndata-1)/2
brand<- test1[,1:2]
factor<-test1[,2:ncol]
i=1
k=1
m=2
resultpc<- matrix(0,nrow=2*ncomp,ncol=2)
resultconf<-matrix(0,nrow=2*ncomp,ncol=2)
brandname<-matrix(0,nrow=2*ncomp,ncol=1)
loop1=nrow-nrep
while (i<=loop1){
ni<-i+nrep_1
brandi <- brand[i:ni,]
datai <- factor[i:ni,]
j<-i+nrep
while (j<=nrow) {
nj<-j+nrep_1
brandj<-brand[j:nj,]
dataj <- factor[j:nj,]
brandij<-rbind(brandi,brandj)
dataij<-rbind(datai,dataj)
testij<-dataij[, colSums(dataij,na.rm = TRUE)!=0]
test<-cbind(brandij$brand,testij)
write.csv(test,file="~/Desktop/test.csv")
testnew <- read.csv(file="~/Desktop/test.csv",head=TRUE,sep=",")
nn<- ncol(testnew)
test_pls = plsDA(testnew[,3:nn], testnew$brandij.brand, autosel=TRUE, comps=2, validation=NULL, test=NULL, cv="LOO", k=NULL, retain.models=FALSE)
summary(test_pls)
pc<-test_pls$comp_group
score<-test_pls$scores
yload<-test_pls$y.loadings
comp<-test_pls$components
name1<- arrayInd(1, dim(pc))
name2<- arrayInd(2, dim(pc))
resultpc[k,1]<-pc[1,1]
resultpc[k,2]<-pc[1,2]
brandname[k,1]<-rownames(pc)[name1[,1]]
resultpc[m,1]<-pc[2,1]
resultpc[m,2]<-pc[2,2]
brandname[m,1]<-rownames(pc)[name2[,1]]
conf<-test_pls$confusion
resultconf[k,1]<-conf[1,1]
resultconf[k,2]<-conf[1,2]
resultconf[m,1]<-conf[2,1]
resultconf[m,2]<-conf[2,2]
j=j+nrep
k=k+2
m=m+2
}
i=i+nrep
}
write.csv(resultpc,file="~/Desktop/resultpc.csv")
write.csv(brandname,file="~/Desktop/brandname.csv")
write.csv(resultconf,file="~/Desktop/resultconf.csv")
library(DiscriMiner)
library(gdata)
test1 <- read.csv(file="~/Desktop/test10.csv",head=TRUE,sep=",")
ncol <- ncol(test1)
nrow <- nrow(test1)
nrep=3 #change the number of replicates
nrep_1=2 #change the number of replicates-1
ndata<- nrow/nrep
ncomp<-ndata*(ndata-1)/2
brand<- test1[,1:2]
factor<-test1[,2:ncol]
i=1
k=1
m=2
resultpc<- matrix(0,nrow=2*ncomp,ncol=2)
resultconf<-matrix(0,nrow=2*ncomp,ncol=2)
brandname<-matrix(0,nrow=2*ncomp,ncol=1)
loop1=nrow-nrep
while (i<=loop1){
ni<-i+nrep_1
brandi <- brand[i:ni,]
datai <- factor[i:ni,]
j<-i+nrep
while (j<=nrow) {
nj<-j+nrep_1
brandj<-brand[j:nj,]
dataj <- factor[j:nj,]
brandij<-rbind(brandi,brandj)
dataij<-rbind(datai,dataj)
testij<-dataij[, colSums(dataij,na.rm = TRUE)!=0]
test<-cbind(brandij$brand,testij)
write.csv(test,file="~/Desktop/test.csv")
testnew <- read.csv(file="~/Desktop/test.csv",head=TRUE,sep=",")
nn<- ncol(testnew)
test_pls = plsDA(testnew[,3:nn], testnew$brandij.brand, autosel=TRUE, comps=2, validation=NULL, test=NULL, cv="LOO", k=NULL, retain.models=FALSE)
summary(test_pls)
pc<-test_pls$comp_group
score<-test_pls$scores
yload<-test_pls$y.loadings
comp<-test_pls$components
name1<- arrayInd(1, dim(pc))
name2<- arrayInd(2, dim(pc))
resultpc[k,1]<-pc[1,1]
resultpc[k,2]<-pc[1,2]
brandname[k,1]<-rownames(pc)[name1[,1]]
resultpc[m,1]<-pc[2,1]
resultpc[m,2]<-pc[2,2]
brandname[m,1]<-rownames(pc)[name2[,1]]
conf<-test_pls$confusion
resultconf[k,1]<-conf[1,1]
resultconf[k,2]<-conf[1,2]
resultconf[m,1]<-conf[2,1]
resultconf[m,2]<-conf[2,2]
j=j+nrep
k=k+2
m=m+2
}
i=i+nrep
}
write.csv(resultpc,file="~/Desktop/resultpc.csv")
write.csv(brandname,file="~/Desktop/brandname.csv")
write.csv(resultconf,file="~/Desktop/resultconf.csv")
brandname.csvresultconf.csvresultpc.csv
library(DiscriMiner)
library(gdata)
test1 <- read.csv(file="~/Desktop/iris.csv",head=TRUE,sep=",")
ncol <- ncol(test1)
nrow <- nrow(test1)
nrep=50 #change the number of replicates
nrep_1=49 #change the number of replicates-1
ndata<- nrow/nrep
ncomp<-ndata*(ndata-1)/2
brand<- test1[,1:2]
factor<-test1[,2:ncol]
i=1
k=1
m=2
resultpc<- matrix(0,nrow=2*ncomp,ncol=2)
resultconf<-matrix(0,nrow=2*ncomp,ncol=2)
brandname<-matrix(0,nrow=2*ncomp,ncol=1)
loop1=nrow-nrep
while (i<=loop1){
ni<-i+nrep_1
brandi <- brand[i:ni,]
datai <- factor[i:ni,]
j<-i+nrep
while (j<=nrow) {
nj<-j+nrep_1
brandj<-brand[j:nj,]
dataj <- factor[j:nj,]
brandij<-rbind(brandi,brandj)
dataij<-rbind(datai,dataj)
testij<-dataij[, colSums(dataij,na.rm = TRUE)!=0]
test<-cbind(brandij$brand,testij)
write.csv(test,file="~/Desktop/test.csv")
testnew <- read.csv(file="~/Desktop/test.csv",head=TRUE,sep=",")
nn<- ncol(testnew)
test_pls = plsDA(testnew[,3:nn], testnew$brandij.brand, autosel=TRUE, comps=2, validation=NULL, test=NULL, cv="LOO", k=NULL, retain.models=FALSE)
summary(test_pls)
pc<-test_pls$comp_group
score<-test_pls$scores
yload<-test_pls$y.loadings
comp<-test_pls$components
name1<- arrayInd(1, dim(pc))
name2<- arrayInd(2, dim(pc))
resultpc[k,1]<-pc[1,1]
resultpc[k,2]<-pc[1,2]
brandname[k,1]<-rownames(pc)[name1[,1]]
resultpc[m,1]<-pc[2,1]
resultpc[m,2]<-pc[2,2]
brandname[m,1]<-rownames(pc)[name2[,1]]
conf<-test_pls$confusion
resultconf[k,1]<-conf[1,1]
resultconf[k,2]<-conf[1,2]
resultconf[m,1]<-conf[2,1]
resultconf[m,2]<-conf[2,2]
j=j+nrep
k=k+2
m=m+2
}
i=i+nrep
}
write.csv(resultpc,file="~/Desktop/resultpc.csv")
write.csv(brandname,file="~/Desktop/brandname.csv")
write.csv(resultconf,file="~/Desktop/resultconf.csv")
library(pca3d)
install.packages("pca3d")
data(metabo )
Linear Discriminant Analysis with Jacknifed Prediction
library(MASS)
fit <- lda(G ~ x1 + x2 + x3, data=test1,
na.action="na.omit", CV=TRUE)
fit # show results
Linear Discriminant Analysis with Jacknifed Prediction
library(MASS)
Linear Discriminant Analysis with Jacknifed Prediction
library(MASS)
test1 <- read.txt(file="~/Desktop/test1.csv",head=TRUE,sep=",")
test1 <- read.csv(file="~/Desktop/test1.csv",head=TRUE,sep=",")
test 1 <- read.csv(file="~/Desktop/test1.csv",head=TRUE,sep=",")
test1 <- read.csv(file="~/Desktop/test1.csv",head=TRUE,sep=",")
test1
library(MASS)
fit <- lda(G ~ x1 + x2 + x3, data=mydata,
na.action="na.omit", CV=TRUE)
fit # show results
install.packages("bpca")
test1 <- read.csv(file="~/Desktop/test1.csv",head=TRUE,sep=",")
plot(bpca(iris[-5],          method=􏰀hj􏰀,          d=1:3),     rgl.use=TRUE,     var.col=􏰀brown􏰀,     var.factor=.3,     var.cex=1.2,     obj.names=FALSE,     obj.cex=.8,     obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀orange􏰀)[unclass(iris$Species)],     simple.axes=FALSE,     box=TRUE)
test1 <- read.csv(file="~/Desktop/iris.csv",head=TRUE,sep=",")
iris.csv
iris
plot(bpca(iris[-5],          method=􏰀hj􏰀,          d=1:3),     rgl.use=TRUE,     var.col=􏰀brown􏰀,     var.factor=.3,     var.cex=1.2,     obj.names=FALSE,     obj.cex=.8,     obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀orange􏰀)[unclass(iris$Species)],     simple.axes=FALSE,     box=TRUE)
plot(bpca(iris[-5],          method=􏰀hj􏰀,          d=1:3)
plot(bpca(iris[-5]
method=􏰀hj􏰀
plot(bpca(iris[-5]
method='hj'
plot(bpca(iris[-5]
rgl.use=TRUE,var.col=􏰀brown􏰀,var.factor=.3,var.cex=1.2,obj.names=FALSE,obj.cex=.8,obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀orange􏰀)[unclass(iris$Species)],simple.axes=FALSE,box=TRUE)
lot(bpca(iris[-5],         d=1:3),    var.factor=.2,    var.color=c(􏰀blue􏰀, 􏰀red􏰀),    var.cex=1,    obj.names=FALSE,    obj.cex=1,    obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀blue􏰀)[unclass(iris$Species)],    obj.pch=c(􏰀+􏰀, 􏰀*􏰀, 􏰀-􏰀)[unclass(iris$Species)])
lot(bpca(iris[-5],         d=1:3),    var.factor=.2,    var.color=c(􏰀blue􏰀, 􏰀red􏰀),    var.cex=1,    obj.names=FALSE,    obj.cex=1,    obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀blue􏰀)[unclass(iris$Species)],    obj.pch=c(􏰀+􏰀, 􏰀*􏰀, 􏰀-􏰀)[unclass(iris$Species)])
lot(bpca(iris[-5],         d=1:3),
lot(bpca(iris[-5],
lot(bpca(iris[-5],         d=1:3),
library(bpca)
plot(bpca(iris2,         d=1:3),    var.factor=.2,    var.color=c(􏰀blue􏰀, 􏰀red􏰀),    var.cex=1,    obj.names=FALSE,    obj.cex=1,    obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀blue􏰀)[unclass(iris$Species)],    obj.pch=c(􏰀+􏰀, 􏰀*􏰀, 􏰀-􏰀)[unclass(iris$Species)])
iris2 <- read.csv(file="~/Desktop/iris2.csv",head=TRUE,sep=",")
iris2
plot(bpca(iris2,         d=1:3),    var.factor=.2,    var.color=c(􏰀blue􏰀, 􏰀red􏰀),    var.cex=1,    obj.names=FALSE,    obj.cex=1,    obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀blue􏰀)[unclass(iris$Species)],    obj.pch=c(􏰀+􏰀, 􏰀*􏰀, 􏰀-􏰀)[unclass(iris$Species)])
plot(bpca(iris2,         d=1:3),
plot(bpca(iris2,d=1:3),
var.factor=.2,    var.color=c(􏰀blue􏰀, 􏰀red􏰀),    var.cex=1,    obj.names=FALSE,    obj.cex=1,    obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀blue􏰀)[unclass(iris$Species)],    obj.pch=c(􏰀+􏰀, 􏰀*􏰀, 􏰀-􏰀)[unclass(iris$Species)])
var.factor=.2,
plot(bpca(iris2,         d=1:3),
plot(bpca(iris2,d=1:3)
plot(bpca(iris2,d=1:3))
plot(bpca(iris2,d=1:3))
plot(bpca(iris2,d=1:1000)
setwd("~/Dropbox/R - class (1)/Kiran/2.Reading files")
x = c(runif(100))
x
y = c(runif(100))
y
A = cbind(x,y)
A
write.table(A,file="demo_table.csv")
A
demo_table.csv
demo_table
demo_table
A
B
A
B
D = write.csv(A , file = "demo_table2.csv")
D
summary(A)
summary(B)
att(A)
Attribute(A)
summar(A)
summary(a)
summary(A)
summary(B)
B <- read.table("demo_table.csv")
B
summary(B)
summary(A)
D =  read.csv("demo_table2.csv")
D
F =  write.csv("demo_table2.csv")
F
demo_table2
C =  read.csv("demo_table2.csv")
write.csv (F, file ="demo.csv")
F
source('~/.active-rstudio-document')
C =  read.csv("demo_table2.csv")
c
A =  read.csv("demo_table2.csv")
A
D = read.csv("table_2.csv")
D
D = read.csv("table_2.csv"), list = false
D
summary(D)
1
summary(1.csv)
1.csv
cd~Desktop
dir
x=c(1:1000)
x
sum = 0.0
for (k in 1:n){
sum = sum + idata[k]
}
sum = 0.0
for (k in 1:100){
sum = sum + idata[k]
}
sum = 0.0
for (k in 1:100){
sum = sum + idata[k]
}
x=c(1:1000)
sum =0.0
sum = 0.0
for (k in 1:100){
sum = sum + x[k]
}
mn = sum/100
print(mn)
t = mean (x)
t
print (t)
x=c(1:1000)
sum =0.0
sum = 0.0
for (k in 1:100){
print("Kiran")]
}
sum = 0.0
for (k in 1:100){
print("Kiran")
}
mean (x)
mean (x)
jpt=c(1:1000)
jpt (x)
jpt (x)
setwd("~/Dropbox/R - class (1)/Kiran/2.Reading files")
x = c (1:1000)
sum = 0.0
for (k in 1:100)
sum = sum +x[k]
for (k in 1:100){
}
mn = sum/100
pritn(mn)
print (mn)
mn
mn
y = c(runif(100))
t = mean_finder(y)
t
source('~/.active-rstudio-document')
t = mean_finder(x)
t
tt = mean(x)
tt
td = mean(y)
td
x = c(1:1000)
method 1 #
method 1 #
#method 1
x = c(1:1000)
sum = 0.0
#method 1
for (i in 1:1000{
for (i in 1:1000) {
of (x[k] %% 2 =0)}
of (x[k] %% 2 =0)
for (i in 1:1000) {
x = c(1:100)
sum = 0.0
for (i in 1)
for (i in 1: 10) {
100%%2
x = 0
if (x=0){
if (x = 0){
x = 0
if (x==0){ print ("yes")}
tt = mean(x)
y = c(runif(100))
y
dev_finder <- function(idata){
n = length(idata)
min = mean_finder(idata)
sum = 0.0
for(k in 1:n){
sum =  sum + (idata[k] - min)**2
}
sdd = sqrt(sum)
return(sdd)
}
sd(x)
sd(y)
xx = c(10,20)
td = dev_finder(xx)
tdd = sd(xx)   #<--------this is built in library function "sd"!
tdd = sd(xx)
sd(xx)
tdd
z= c (1:50)
sd (z)
f=(1:500)
sd(f)
