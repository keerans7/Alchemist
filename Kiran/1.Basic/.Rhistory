dataij<-rbind(datai,dataj)
testij<-dataij[, colSums(dataij,na.rm = TRUE)!=0]
test<-cbind(brandij$brand,testij)
write.csv(test,file="~/Desktop/test.csv")
testnew <- read.csv(file="~/Desktop/test.csv",head=TRUE,sep=",")
nn<- ncol(testnew)
test_pls = plsDA(testnew[,3:nn], testnew$brandij.brand, autosel=TRUE, comps=2, validation=NULL, test=NULL, cv="LOO", k=NULL, retain.models=FALSE)
summary(test_pls)
pc<-test_pls$comp_group
score<-test_pls$scores
yload<-test_pls$y.loadings
comp<-test_pls$components
name1<- arrayInd(1, dim(pc))
name2<- arrayInd(2, dim(pc))
resultpc[k,1]<-pc[1,1]
resultpc[k,2]<-pc[1,2]
brandname[k,1]<-rownames(pc)[name1[,1]]
resultpc[m,1]<-pc[2,1]
resultpc[m,2]<-pc[2,2]
brandname[m,1]<-rownames(pc)[name2[,1]]
conf<-test_pls$confusion
resultconf[k,1]<-conf[1,1]
resultconf[k,2]<-conf[1,2]
resultconf[m,1]<-conf[2,1]
resultconf[m,2]<-conf[2,2]
j=j+nrep
k=k+2
m=m+2
}
i=i+nrep
}
library(DiscriMiner)
library(gdata)
test1 <- read.csv(file="~/Desktop/test10.csv",head=TRUE,sep=",")
ncol <- ncol(test1)
nrow <- nrow(test1)
nrep=3 #change the number of replicates
nrep_1=2 #change the number of replicates-1
ndata<- nrow/nrep
ncomp<-ndata*(ndata-1)/2
brand<- test1[,1:2]
factor<-test1[,2:ncol]
i=1
k=1
m=2
resultpc<- matrix(0,nrow=2*ncomp,ncol=2)
resultconf<-matrix(0,nrow=2*ncomp,ncol=2)
brandname<-matrix(0,nrow=2*ncomp,ncol=1)
loop1=nrow-nrep
while (i<=loop1){
ni<-i+nrep_1
brandi <- brand[i:ni,]
datai <- factor[i:ni,]
j<-i+nrep
while (j<=nrow) {
nj<-j+nrep_1
brandj<-brand[j:nj,]
dataj <- factor[j:nj,]
brandij<-rbind(brandi,brandj)
dataij<-rbind(datai,dataj)
testij<-dataij[, colSums(dataij,na.rm = TRUE)!=0]
test<-cbind(brandij$brand,testij)
write.csv(test,file="~/Desktop/test.csv")
testnew <- read.csv(file="~/Desktop/test.csv",head=TRUE,sep=",")
nn<- ncol(testnew)
test_pls = plsDA(testnew[,3:nn], testnew$brandij.brand, autosel=TRUE, comps=2, validation=NULL, test=NULL, cv="LOO", k=NULL, retain.models=FALSE)
summary(test_pls)
pc<-test_pls$comp_group
score<-test_pls$scores
yload<-test_pls$y.loadings
comp<-test_pls$components
name1<- arrayInd(1, dim(pc))
name2<- arrayInd(2, dim(pc))
resultpc[k,1]<-pc[1,1]
resultpc[k,2]<-pc[1,2]
brandname[k,1]<-rownames(pc)[name1[,1]]
resultpc[m,1]<-pc[2,1]
resultpc[m,2]<-pc[2,2]
brandname[m,1]<-rownames(pc)[name2[,1]]
conf<-test_pls$confusion
resultconf[k,1]<-conf[1,1]
resultconf[k,2]<-conf[1,2]
resultconf[m,1]<-conf[2,1]
resultconf[m,2]<-conf[2,2]
j=j+nrep
k=k+2
m=m+2
}
i=i+nrep
}
write.csv(resultpc,file="~/Desktop/resultpc.csv")
write.csv(brandname,file="~/Desktop/brandname.csv")
write.csv(resultconf,file="~/Desktop/resultconf.csv")
library(DiscriMiner)
library(gdata)
test1 <- read.csv(file="~/Desktop/test10.csv",head=TRUE,sep=",")
ncol <- ncol(test1)
nrow <- nrow(test1)
nrep=3 #change the number of replicates
nrep_1=2 #change the number of replicates-1
ndata<- nrow/nrep
ncomp<-ndata*(ndata-1)/2
brand<- test1[,1:2]
factor<-test1[,2:ncol]
i=1
k=1
m=2
resultpc<- matrix(0,nrow=2*ncomp,ncol=2)
resultconf<-matrix(0,nrow=2*ncomp,ncol=2)
brandname<-matrix(0,nrow=2*ncomp,ncol=1)
loop1=nrow-nrep
while (i<=loop1){
ni<-i+nrep_1
brandi <- brand[i:ni,]
datai <- factor[i:ni,]
j<-i+nrep
while (j<=nrow) {
nj<-j+nrep_1
brandj<-brand[j:nj,]
dataj <- factor[j:nj,]
brandij<-rbind(brandi,brandj)
dataij<-rbind(datai,dataj)
testij<-dataij[, colSums(dataij,na.rm = TRUE)!=0]
test<-cbind(brandij$brand,testij)
write.csv(test,file="~/Desktop/test.csv")
testnew <- read.csv(file="~/Desktop/test.csv",head=TRUE,sep=",")
nn<- ncol(testnew)
test_pls = plsDA(testnew[,3:nn], testnew$brandij.brand, autosel=TRUE, comps=2, validation=NULL, test=NULL, cv="LOO", k=NULL, retain.models=FALSE)
summary(test_pls)
pc<-test_pls$comp_group
score<-test_pls$scores
yload<-test_pls$y.loadings
comp<-test_pls$components
name1<- arrayInd(1, dim(pc))
name2<- arrayInd(2, dim(pc))
resultpc[k,1]<-pc[1,1]
resultpc[k,2]<-pc[1,2]
brandname[k,1]<-rownames(pc)[name1[,1]]
resultpc[m,1]<-pc[2,1]
resultpc[m,2]<-pc[2,2]
brandname[m,1]<-rownames(pc)[name2[,1]]
conf<-test_pls$confusion
resultconf[k,1]<-conf[1,1]
resultconf[k,2]<-conf[1,2]
resultconf[m,1]<-conf[2,1]
resultconf[m,2]<-conf[2,2]
j=j+nrep
k=k+2
m=m+2
}
i=i+nrep
}
write.csv(resultpc,file="~/Desktop/resultpc.csv")
write.csv(brandname,file="~/Desktop/brandname.csv")
write.csv(resultconf,file="~/Desktop/resultconf.csv")
brandname.csvresultconf.csvresultpc.csv
library(DiscriMiner)
library(gdata)
test1 <- read.csv(file="~/Desktop/iris.csv",head=TRUE,sep=",")
ncol <- ncol(test1)
nrow <- nrow(test1)
nrep=50 #change the number of replicates
nrep_1=49 #change the number of replicates-1
ndata<- nrow/nrep
ncomp<-ndata*(ndata-1)/2
brand<- test1[,1:2]
factor<-test1[,2:ncol]
i=1
k=1
m=2
resultpc<- matrix(0,nrow=2*ncomp,ncol=2)
resultconf<-matrix(0,nrow=2*ncomp,ncol=2)
brandname<-matrix(0,nrow=2*ncomp,ncol=1)
loop1=nrow-nrep
while (i<=loop1){
ni<-i+nrep_1
brandi <- brand[i:ni,]
datai <- factor[i:ni,]
j<-i+nrep
while (j<=nrow) {
nj<-j+nrep_1
brandj<-brand[j:nj,]
dataj <- factor[j:nj,]
brandij<-rbind(brandi,brandj)
dataij<-rbind(datai,dataj)
testij<-dataij[, colSums(dataij,na.rm = TRUE)!=0]
test<-cbind(brandij$brand,testij)
write.csv(test,file="~/Desktop/test.csv")
testnew <- read.csv(file="~/Desktop/test.csv",head=TRUE,sep=",")
nn<- ncol(testnew)
test_pls = plsDA(testnew[,3:nn], testnew$brandij.brand, autosel=TRUE, comps=2, validation=NULL, test=NULL, cv="LOO", k=NULL, retain.models=FALSE)
summary(test_pls)
pc<-test_pls$comp_group
score<-test_pls$scores
yload<-test_pls$y.loadings
comp<-test_pls$components
name1<- arrayInd(1, dim(pc))
name2<- arrayInd(2, dim(pc))
resultpc[k,1]<-pc[1,1]
resultpc[k,2]<-pc[1,2]
brandname[k,1]<-rownames(pc)[name1[,1]]
resultpc[m,1]<-pc[2,1]
resultpc[m,2]<-pc[2,2]
brandname[m,1]<-rownames(pc)[name2[,1]]
conf<-test_pls$confusion
resultconf[k,1]<-conf[1,1]
resultconf[k,2]<-conf[1,2]
resultconf[m,1]<-conf[2,1]
resultconf[m,2]<-conf[2,2]
j=j+nrep
k=k+2
m=m+2
}
i=i+nrep
}
write.csv(resultpc,file="~/Desktop/resultpc.csv")
write.csv(brandname,file="~/Desktop/brandname.csv")
write.csv(resultconf,file="~/Desktop/resultconf.csv")
library(pca3d)
install.packages("pca3d")
data(metabo )
Linear Discriminant Analysis with Jacknifed Prediction
library(MASS)
fit <- lda(G ~ x1 + x2 + x3, data=test1,
na.action="na.omit", CV=TRUE)
fit # show results
Linear Discriminant Analysis with Jacknifed Prediction
library(MASS)
Linear Discriminant Analysis with Jacknifed Prediction
library(MASS)
test1 <- read.txt(file="~/Desktop/test1.csv",head=TRUE,sep=",")
test1 <- read.csv(file="~/Desktop/test1.csv",head=TRUE,sep=",")
test 1 <- read.csv(file="~/Desktop/test1.csv",head=TRUE,sep=",")
test1 <- read.csv(file="~/Desktop/test1.csv",head=TRUE,sep=",")
test1
library(MASS)
fit <- lda(G ~ x1 + x2 + x3, data=mydata,
na.action="na.omit", CV=TRUE)
fit # show results
install.packages("bpca")
test1 <- read.csv(file="~/Desktop/test1.csv",head=TRUE,sep=",")
plot(bpca(iris[-5],          method=􏰀hj􏰀,          d=1:3),     rgl.use=TRUE,     var.col=􏰀brown􏰀,     var.factor=.3,     var.cex=1.2,     obj.names=FALSE,     obj.cex=.8,     obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀orange􏰀)[unclass(iris$Species)],     simple.axes=FALSE,     box=TRUE)
test1 <- read.csv(file="~/Desktop/iris.csv",head=TRUE,sep=",")
iris.csv
iris
plot(bpca(iris[-5],          method=􏰀hj􏰀,          d=1:3),     rgl.use=TRUE,     var.col=􏰀brown􏰀,     var.factor=.3,     var.cex=1.2,     obj.names=FALSE,     obj.cex=.8,     obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀orange􏰀)[unclass(iris$Species)],     simple.axes=FALSE,     box=TRUE)
plot(bpca(iris[-5],          method=􏰀hj􏰀,          d=1:3)
plot(bpca(iris[-5]
method=􏰀hj􏰀
plot(bpca(iris[-5]
method='hj'
plot(bpca(iris[-5]
rgl.use=TRUE,var.col=􏰀brown􏰀,var.factor=.3,var.cex=1.2,obj.names=FALSE,obj.cex=.8,obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀orange􏰀)[unclass(iris$Species)],simple.axes=FALSE,box=TRUE)
lot(bpca(iris[-5],         d=1:3),    var.factor=.2,    var.color=c(􏰀blue􏰀, 􏰀red􏰀),    var.cex=1,    obj.names=FALSE,    obj.cex=1,    obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀blue􏰀)[unclass(iris$Species)],    obj.pch=c(􏰀+􏰀, 􏰀*􏰀, 􏰀-􏰀)[unclass(iris$Species)])
lot(bpca(iris[-5],         d=1:3),    var.factor=.2,    var.color=c(􏰀blue􏰀, 􏰀red􏰀),    var.cex=1,    obj.names=FALSE,    obj.cex=1,    obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀blue􏰀)[unclass(iris$Species)],    obj.pch=c(􏰀+􏰀, 􏰀*􏰀, 􏰀-􏰀)[unclass(iris$Species)])
lot(bpca(iris[-5],         d=1:3),
lot(bpca(iris[-5],
lot(bpca(iris[-5],         d=1:3),
library(bpca)
plot(bpca(iris2,         d=1:3),    var.factor=.2,    var.color=c(􏰀blue􏰀, 􏰀red􏰀),    var.cex=1,    obj.names=FALSE,    obj.cex=1,    obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀blue􏰀)[unclass(iris$Species)],    obj.pch=c(􏰀+􏰀, 􏰀*􏰀, 􏰀-􏰀)[unclass(iris$Species)])
iris2 <- read.csv(file="~/Desktop/iris2.csv",head=TRUE,sep=",")
iris2
plot(bpca(iris2,         d=1:3),    var.factor=.2,    var.color=c(􏰀blue􏰀, 􏰀red􏰀),    var.cex=1,    obj.names=FALSE,    obj.cex=1,    obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀blue􏰀)[unclass(iris$Species)],    obj.pch=c(􏰀+􏰀, 􏰀*􏰀, 􏰀-􏰀)[unclass(iris$Species)])
plot(bpca(iris2,         d=1:3),
plot(bpca(iris2,d=1:3),
var.factor=.2,    var.color=c(􏰀blue􏰀, 􏰀red􏰀),    var.cex=1,    obj.names=FALSE,    obj.cex=1,    obj.col=c(􏰀red􏰀, 􏰀green3􏰀, 􏰀blue􏰀)[unclass(iris$Species)],    obj.pch=c(􏰀+􏰀, 􏰀*􏰀, 􏰀-􏰀)[unclass(iris$Species)])
var.factor=.2,
plot(bpca(iris2,         d=1:3),
plot(bpca(iris2,d=1:3)
plot(bpca(iris2,d=1:3))
plot(bpca(iris2,d=1:3))
plot(bpca(iris2,d=1:1000)
setwd
setwd("~/Dropbox/R - class (1)/Kiran/1.Basic")
source('~/Dropbox/R - class (1)/Kiran/1.Basic/data_frame.R')
year
y[1]
y[Length(y)]
y[Length(y)]
y[2]
y[3]
y[4]
person
person$name
person name
person$name
person$x
person$y
cbind(year, x, y)
cls
setwd("~/Dropbox/R - class (1)/Kiran/1.Basic")
y
cbind(year,x,y)
cbind
person$name
names<-"Ram","Shyam", "Ghanasyam"
names<-("Ram","Shyam", "Ghanasyam")
names<-("Ram","Shyam", "Ghanasyam")
names<-c("Ram","Shyam", "Ghanasyam")
names
nrow(D)
D
D<-data.frame(names,year,x,y)
D<-data.frame(names, year, x, y)
D<-data.frame(names, year, x, y)
D<-data.frame (names, year, x, y)
D<- data.frame (names, year, x, y)
D <-data.frame(names,year,x,y)
D$names
D$names[nrow]
D<-data.frame(names,year,x,y)
results
source('~/Dropbox/R - class (1)/Kiran/1.Basic/data_frame.R')
results <-data.frame(matrix(runif(49),nrow=7,col=7))
results <- data.frame(matrix(runif(49),nrow=7,ncol=7))
results <- data.frame(matrix(runif(25),nrow=7,ncol=5))
results <- data.frame(matrix(runif(25),nrow=5,ncol=5))
rownames(results) <- c("a","b","x","y","z")
colnames(results) <- c("c","d","l","p","t")
attr(results,"title") <- "aaa"
source('~/Dropbox/R - class (1)/Kiran/1.Basic/data_frame.R')
results$rownames
results <- data.frame(matrix(runif(49),nrow=7,ncol=7))
rownames(results) <- c("a","b","x","y","z")
colnames(results) <- c("c","d","l","p","t")
attr(results,"title") <- "aaa"
results$rownames
source('~/Dropbox/R - class (1)/Kiran/1.Basic/data_frame.R')
source('~/Dropbox/R - class (1)/Kiran/1.Basic/data_frame.R')
results <- data.frame(matrix(runif(25),nrow=5,ncol=5))
rownames(results) <- c("a","b","x","y","z")
colnames(results) <- c("c","d","l","p","t")
attr(results,"title") <- "aaa"
results
results <- data.frame(matrix(runif(50),nrow=5,ncol=10))
> rownames(results) <- c("a","b","x","y","z")
> colnames(results) <- c("c","d","l","p","t")
> attr(results,"title") <- "aaa"
results <- data.frame(matrix(runif(50),nrow=5,ncol=10))
> rownames(results) <- c("a","b","x","y","z")
> colnames(results) <- c("c","d","l","p","t")
> attr(results,"title") <- "aaa"
results <- data.frame(matrix(runif(49),nrow=7,ncol=7))
rownames(results) <- c("a","b","x","y","z")
colnames(results) <- c("c","d","l","p","t")
attr(results,"title") <- "aaa"
results
plotresults[,1],results[,2]
plot(results[,1],results[,2])
plot(results[,2],results[,1])
x=list(height=5.4, weight=54)
X = list(height=5.4, weight=54)
print("Use default printing --")
print(X)
print("Accessing individual elements --")
cat("Your height is ", X$height, " and your weight is ", X$weight, "\n")
X = list(height=5.4, weight=54)
X = list(height=5.4, weight=54)
print("Use default printing --")
print
print(x)
x
x
print(X)
pritn(x)
print(x)
print(X)
X = list(height=5.4, weight=54)
print(X)
print(x)
x=list(height=5.4, weight=54)
print(X)
pritn("Accessing individual elements --")
source('~/Dropbox/R - class (1)/Kiran/1.Basic/function.R')
X = list(height=5.4, weight=54)
print("Use default printing --")
print(X)
print("Accessing individual elements --")
cat("Your height is ", X$height, " and your weight is ", X$weight, "\n")
square <- function(x) {
return(x*x)
}
square <- function(x) {
return(x*x)
}
cat("The square of 3 is ", square(3), "\n")
cube <- function(x) {
return(x*x*x)
}
cat("The cube of 3 is ", cube(3), "\n")
cube <- function(x) {
return(x*x*x)
}
cat("The cube of 4 is ", cube(4), "\n")
cat('calling cube with 5:", cube(2))
source('~/Dropbox/R - class (1)/Kiran/1.Basic/function.R')
cube <- function(x=5) {
return(x*x*x);
}
cat("Calling cube with 2 : ", cube(2), "\n")    # will give 2^3
cat("Calling cube        : ", cube(), "\n")     # will default to 5^3.
source('~/Dropbox/R - class (1)/Kiran/1.Basic/function.R')
cube <- function(x=5) {
return(x*x*x);
}
cat("Calling cube with 2 : ", cube(2), "\n")    # will give 2^3
cat("Calling cube        : ", cube(), "\n")     # will default to 5^3.
cube <- function(x=9) {
return(x*x*x);
}
cat("Calling cube with 9 : ", cube(9), "\n")    # will give 9^3
cat("Calling cube        : ", cube(), "\n")     # will default to 9^3.
pirnt("I am kiran")
pritn("I am Kiran", cube(7), "\n")
print("I am Kiran", cube(7), "\n")
print ("I am Kiran", cube(7), "\n")
print("I am Kiran", cube(7), "\n")
print("I am Kiran", cube(7), "\n")
cube <- function(x=5) {
return(x*x*x);
}
cat("Calling cube with 2 : ", cube(2), "\n")    # will give 2^3
cat("Calling cube        : ", cube(), "\n")     # will default to 5^3.
print("I am Kiran", cube(5), "\n")
The square of 3
square <-function(x) {}
squre 5
squre 5
print
console
source('~/Dropbox/R - class (1)/Kiran/1.Basic/function.R')
exi
exit
}
cat("The square of 3 is ", square(3), "\2n")
cat("The square of 3 is ", square(3), "\n")
xx= square (4)+bue(5)
xx= square (4)+cube(5)
cat(xx)
print(xx)
jpt <-function(y)
jpt <-funtion(y)
{}
{ x=runif(1)
return((x*2))
}
}
jpt <- function(x) {
return(x*x)
return(list(x2=x*x, x3=x*x*x, x4=x*x*x*x));
jpt 4
jpt(4)
square <- function(x) {
return(x*x)
}
x=runif(3)
y=(x**3+1+x)
return (y)
return (y)
return(y)
square <- function(x)
square <- function(x){}
x=runif(22)
z=runif(33)
y=(x**+x+3)
return(y)
y=(x**2+x+3)
return(y)
y= (x**2+x+3)
return(y)
return (y)
source('~/Dropbox/R - class (1)/Kiran/1.Basic/function.R')
source('~/Dropbox/R - class (1)/Kiran/1.Basic/function.R')
setwd("~/Dropbox/R - class (1)/Kiran/1.Basic")
powerful <- function(x) {
return(list(x2=x*x, x3=x*x*x, x4=x*x*x*x));
}
print("Showing powers of 3 --"); print(powerful(3));
powerful <- function(x) {
return(list(x2=x*x, x3=x*x*x, x4=x*x*x*x));
}
y=(4**x+2x)
y=(4*x+2x)
y=(4*x+2x)
Kiran=function(x)[x=runif{(5)]}
setwd("~/Dropbox/R - class (1)/Kiran/1.Basic")
source('~/Dropbox/R - class (1)/Kiran/1.Basic/data_frame.R')
source('~/Dropbox/R - class (1)/Kiran/1.Basic/data_frame.R')
matrix <- function(x)
x = c(runif(100);
x = c(runif(100);
powerful <- function(x) {
return(list(x2=x*x, x3=x*x*x, x4=x*x*x*x));
}
print("Showing powers of 3 --"); print(powerful(3));
toners
powerful <- function(x) {
return(list(x2=x*x, x3=x*x*x, x4=x*x*x*x));
}
print("Showing powers of 3 --"); print(powerful(3));
powerful <- function(x) {list(x2=x*x, x3=x*x*x, x4=x*x*x*x)}
x
cls
marix<-funciton ()
marix <-funciton ()
x=runif(3)
x
x=runif(5)
x
exit
L
exit
